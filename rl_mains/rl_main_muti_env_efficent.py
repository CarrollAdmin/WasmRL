from wasm_env import WASMEnv
from gymnasium.envs.registration import register
import gymnasium
from ppo import *
import matplotlib.pyplot as plt
from runtime import *
from sklearn.ensemble import RandomForestRegressor
import math
seed = 1
torch.manual_seed(seed)            
torch.cuda.manual_seed(seed)       
torch.cuda.manual_seed_all(seed)   
import random
import numpy as np
random.seed(seed)
np.random.seed(seed)
import time
tree_based_time = 0
all_training_time = 0
bms = [
        "2mm",
        # "3mm",
        # "adi",
        # "atax",
        # "bicg",
        # "cholesky",
        # "correlation",
        # "covariance",
        # "deriche",
        # "doitgen",
        # "durbin",
        # # "fdtd-2d",
        # "floyd-warshall",
        # "gemm",
        # "gemver",    
        # "gesummv",
        # # "gramschmidt",
        # # "heat-3d",
        # "jacobi-1d",
        # # "jacobi-2d",
        # "lu",
        # # "ludcmp",
        # "mvt",
        # # "nussinov",
        # # "seidel-2d",
        # "symm",
        # "syr2k",
        # "syrk",
        # "trisolv",
        # "trmm",
        # "test"
    ]

muti_envs = len(bms)
envs = []
envs_n_states = []
prior_pass_all = {}
envs_n_actions = []

for bm in bms:
    key = f'{bm}'
    prior_pass_all[key] = []

for i in range(0, muti_envs):
    env_name = 'WASMEnv-v' + str(i)
    env_configs = {}
    pgm = bms[i]
    env_configs['pgm'] = pgm
    env_configs['device'] = "raspberry"

    register(
        id= env_name,
        entry_point = 'wasm_gym.envs:WASMEnv',
        kwargs={'env_config':env_configs},
        max_episode_steps=3000,
    )

    env = gymnasium.make(env_name)
    n_states = env.observation_space.shape[0]  
    n_actions = env.action_space.n  
    envs.append(env)
    envs_n_states.append(n_states)
    envs_n_actions.append(n_actions)

    # prior knowledge
    # prior_pass = []
    # for i in range(n_actions):
    #     indices=[]
    #     exec_time_raw, _ = get_exec_time(env_configs['pgm'], indices, ".")
    #     indices.append(i)
    #     passes=getPasses(indices)
    #     passes_str =" ".join(str(x) for x in passes)
    #     print(passes_str)
    #     exec_time, _ = get_exec_time(env_configs['pgm'], indices, ".")
    #     print("exec_time_raw:", exec_time_raw)
    #     print("exec_time:", exec_time)
    #     prior_pass.append(exec_time_raw-exec_time)
    # print(prior_pass)
    # prior_pass_all[env_configs['pgm']] = prior_pass
    # output = ""
    # output += f"{env_configs['pgm']}: {prior_pass}\n"
    # with open('prior.txt', 'a') as file:
    #     file.write(output)
# test = [0.0006955464680988843, -0.0013816356658935547, -0.007681369781494141, -0.010013421376546372, -0.05638861656188965, 0.021828174591064342, -0.0015359719594321142, 0.03484336535135901, -0.06965430577596032, 0.09039568901062, 0.07580995559692383, 0.004691282908121708, 0.009568929672241211, -0.0061568419138590125, 0.018841584523519028, -0.03760719299316395, 0.00024779637654626097, 0.029942671457926395, 0.042109330495198605, -0.0016492207845052453, 0.04677669207255042, -0.00891876220703125, -0.003925879796346066, -0.001308441162109375, 0.0037602583567302172, -0.0002968311309814453, 0.002657492955525642, -0.0010491212209066125, 0.23209691047668457, 0.1554311911265056, 0.011078278223673466, -0.0022611618041992188, 0.006649653116861942, -0.0021585623423259204, -0.028209129969279045, -0.0105189482371012, -0.004578669865926033, -0.004492044448852539, 0.2049919764200846, -0.01983785629272461, -0.0012247562408447266, 0.015968958536783817, -0.03832014401753736, -0.018128156661987305, -0.01181340217590321, -0.003782669703165653, 0.015935977300008286, -0.013910690943400028, -0.00477091471354163, 0.004259030024210686, -0.0031505425771077844, -0.014383792877197266, 0.05904547373453772, 0.00047198931376146724, -0.08501005172729492, -0.006022453308105469, 0.41270248095194495, 7.54992167155688e-05, -0.02165333429972327, 0.0006561279296875, 0.007504860560099247, 0.003887494405110603, -0.0112135410308839, 0.0016443729400635876, -0.009552955627441295, -0.019521713256835938, 0.009237448374430413, -0.009681781133015877, 0.020797252655029297, 0.0029660860697429126, 0.01657835642496741, -0.0015593369801838453, 0.04253594080607093, -0.025934616724650028, 0.05011185010274255, 0.016215801239013672, -0.0030833880106607703, -0.029219547907511467, 0.0052567323048909875, 0.003840764363606697, 0.02441827456156409, 0.013883352279663086, -0.0007523695627849047, -0.02917536099751805, -0.022581418355305916, 0.020616372426350837, -0.008248885472615486, 0.005077044169108036, -0.019591331481933594, 0.0010824998219807203, 0.0076198577880859375, -0.05820782979329431, -0.019340435663859012, -0.026697079340616825, 0.019791682561238644, -0.0037061373392741626, 0.22181979815165198, 0.002034028371175167, 0.007857322692871094, -0.019961357116699108, 0.0030226707458496094, -0.0280052820841471, 0.018240133921305413, 0.3067246278127035, -0.05698283513387048, -0.022156794865926144, -0.004780689875284794, 0.014491955439249748, 0.002030054728190178, 0.026053190231323242, 0.03534984588623047, 0.25797136624654127, -0.0012516180674235766, 0.07614318529764819, 0.0011698404947916297, 0.027507781982421764, -0.04154237111409509, 0.03730185826619459, -0.0172269344329834, -0.01984739303588856, 0.006491899490356445, -0.0052759647369384766, 0.015570322672526116, -0.009065230687459236, -0.005909840265909794, -0.14024869600931789, -0.021606286366780636, -0.03224325180053722, 0.013649861017862919, 0.007468382517496819, -0.06752562522888184, -0.02814396222432458, -0.003000974655151367]
# lu = [-0.01620165506998697, 0.031601746877034514, 0.02243208885192871, -0.008273919423421233, 0.008351405461629241, 0.012146790822347014, -0.0004494190216064453, 0.0010763009389241351, 0.02777830759684244, 0.004420836766560882, 0.002651214599609375, 0.007216453552246094, 0.018742640813191713, -0.0012099742889404297, 0.0069811344146728516, -0.010063807169596345, 0.009702444076538086, 0.0053004423777262555, 0.004624684651692718, 0.003641923268636049, 0.013632694880167634, -0.008392890294392913, 0.009683211644490541, -0.0006165504455566406, 0.005627711613972963, 0.00672149658203125, 0.0169675350189209, 0.006705204645792634, 0.07409318288167319, 0.015576521555582673, 0.019275506337483733, -0.00879398981730145, -0.003865877787272154, 0.0019931793212890625, -0.01937874158223471, -0.016461531321207673, 0.013065576553344727, -0.024877309799194336, 0.05198343594868976, 0.020573854446411133, -0.004022677739461272, -0.0042782624562581195, 0.0040138562520345145, 0.0024182796478271484, 0.012273232142130552, 0.009996016820271791, -0.004840691884358733, 0.0031813780466715402, 0.01309053103129068, -0.004530827204386412, 0.007013161977132171, 0.020850578943888365, 0.002992232640584319, 0.005147775014241546, 0.006949424743652344, 0.0035447279612223492, 0.09571003913879395, -0.006727536519368471, 0.007283608118693025, 0.020293474197387695, -0.006512085596720396, 0.008958975474039732, -0.005415360132853181, 0.025173505147298186, 0.0007011890411376953, -0.005633115768432617, -0.0037957032521565848, 0.010685364405314118, -0.017346858978271484, 0.018371979395548493, -0.0087711016337077, 0.04444901148478189, -0.0021680196126302176, 0.019929170608520508, 0.0005340576171875, 0.00966501235961914, -0.00734710693359375, 0.013608853022257505, 0.0009260972340901785, 0.012261311213175474, -0.0013557275136311664, 0.023388465245564788, -0.0023870468139648438, 0.01170651117960611, -0.002015829086303711, 0.009558836619059236, -0.0020498434702555524, 0.009470701217651367, -0.00037590662638348205, 0.01275308926900226, -0.0035409927368164062, 0.018131017684936523, -0.00208719571431476, 0.006995201110839844, -0.004498879114786775, 0.004694938659667969, 0.07611370086669922, -0.0019783178965250836, 0.005385319391886384, 0.018382946650187165, 0.005739847819010407, 0.018404245376586914, -0.012206633885701479, 0.05028525988260907, -0.010165135065714509, 0.01111753781636557, 0.010617256164550781, -0.0005908807118733816, -0.00716392199198404, 0.0018726189931233816, -0.018246730168660463, 0.04242046674092609, 0.010621786117553711, -0.00015346209208172423, 0.004176537195841462, -0.010144869486490876, 0.004028240839640318, -0.0012651284535726004, 0.001660505930582673, 0.0028967857360839844, 0.004090785980224609, -0.008166233698527037, 0.011660178502400725, -0.0057240327199299945, 0.036687294642130525, -0.029646555582682282, 0.0009541511535644531, -0.013447046279907227, 0.018181562423706055, -0.0191527207692464, 0.02524550755818683, 0.003856738408406557, -0.009694576263427734]
# floyd_warshall =  [0.0075170199076334265, 0.010002295176188114, -0.0058976014455159875, -0.009482940038045284, 0.004613399505615234, 0.013276497522989872, -0.007080952326456669, 0.010354042053222656, 0.023184776306152344, 0.03704746564229322, 0.03949602444966627, 0.007001399993896484, 0.01697937647501624, -0.005892594655354855, -0.0016144116719564172, -0.018239736557006836, 0.017928123474121094, -0.0033080577850341797, 0.009291013081868527, 0.005131721496582031, 0.009738683700561523, 0.003953536351521847, 9.775161743164062e-05, 0.008191823959350586, 0.006823142369588253, -0.0070093472798664624, -0.003903945287068722, -0.012852350870768192, 0.2614680131276449, 0.151662826538086, 0.01087188720703125, 0.021539370218912723, -0.015068928400675419, 0.01984492937723792, -0.001188039779663086, -8.972485860192503e-05, -0.006776332855224609, 0.009429772694905636, 0.17500225702921546, 0.003776073455810547, 0.00518290201822913, -0.02547423044840491, 0.008568127950032589, 0.012249867121378544, -0.003387292226155525, -0.005573908487955692, 0.012020746866861942, -0.0019475618998209265, 0.015918731689453125, -0.016817649205525642, 0.011899153391520256, -0.009346961975097656, 0.047483523686726925, -0.01206858952840173, 0.003372987111409431, -0.015015363693237305, 0.27255272865295416, -0.0013398329416910437, -0.0013136068979898718, 0.0026633739471435547, 0.005757888158162472, 0.0014353593190511438, 0.03129784266153979, -0.007660945256551144, -0.0008728504180908203, -0.010000785191853878, 0.009998242060343387, -0.005510727564493778, 0.005246718724568722, 0.005185127258300781, -0.0005869070688883093, 0.008000771204630497, -0.0011572043100992468, -0.01197560628255201, -0.0069046815236409875, 0.01700226465860999, -0.004089514414469475, -0.015003124872843387, 0.0050618648529052734, 0.0022482872009277344, -0.003844022750854492, -0.00047969818115234375, -0.010357459386189705, -0.0037925243377685547, -0.006837129592895508, 0.0007154146830240515, 0.0004123846689859656, -0.007561365763346317, -0.010497570037841797, -0.015776634216308594, -0.0015889803568522876, 0.01197163263956702, 0.0006568431854248047, 0.013802766799926758, -0.00978628794352221, 0.0019005139668782922, 0.23674535751342768, 0.02200349171956384, -0.003355105717976925, -0.01119176546732592, -0.01542973518371582, 0.007292350133260128, 0.0056304931640625, 0.1369382540384928, 0.0035915374755859375, 0.01726818084716797, -0.04231564203898108, 0.013460000356038448, -0.006556908289591434, 0.01756008466084802, 0.006798187891642216, 0.13433917363484704, -0.01414632797241211, -0.008597930272420173, 0.010608355204264286, -0.01655888557434082, -0.010518074035644531, -0.0032047430674234656, -0.00928187370300293, 0.005354245503743527, 0.0019485155741373328, -0.010309934616088867, -0.008069197336832645, 0.01367553075154615, 0.010023832321166992, -0.09259120623270667, 0.0052411556243896484, 0.012034495671590206, 0.0230252742767334, -0.002925872802734375, 0.014217376708984375, 0.012338399887084961, 0.0021839141845703125]
# twomm = [-0.0003596941630046313, -0.003231684366861942, -0.015832821528116825, -0.017052412033081055, -0.011675039927164788, 0.015239715576171875, -0.006227095921834236, 0.032680511474609375, -0.006773869196573967, 0.07030582427978516, 0.045390288035074944, -0.004891077677408817, -0.013988574345906613, -0.022820313771565792, -0.004477024078369141, 0.0020542939503988, -0.010973374048868778, 0.0028673807779947547, 0.010656038920084598, 0.011953274408976311, 0.010025978088378906, -0.008820772171020508, 0.004126230875651116, 0.005440711975097656, 0.0005997021993001672, -0.00968313217163086, 0.004251956939697266, -0.00803518295288086, 0.27995228767395025, 0.08885463078816735, 0.0037172635396321985, 0.008105357487996345, 0.004126469294230217, -0.0004039605458576734, -0.0039824644724527625, 0.012040376663208008, -0.019926627477010128, 0.005399465560913086, 0.13988431294759118, -0.012076298395792606, -0.0020631949106851843, -0.00620214144388842, 0.002288023630777958, 0.008981704711914062, -0.020562489827473884, -0.008109331130981445, -0.014685074488321903, 0.0010349750518798828, 0.012952009836832645, -0.006619373957316044, -0.0042722225189208984, 0.008471488952636719, -0.04273835817972815, 0.0003604888916015625, 0.008989175160725837, 0.007352352142333984, 0.26919714609781903, 0.005484898885091072, 0.017577330271402958, -0.018384456634521484, -0.0066452821095783765, 0.003644386927286747, -0.01325082778930664, 0.011286894480387333, -0.0015362103780109937, -0.017739375432332394, -0.0013987223307291297, -0.00567936897277832, 0.007071415583292606, -0.001079241434733147, 0.0006660620371500281, 0.007562398910522461, -0.0068074862162271765, 0.001451253890991211, 0.002558310826619503, -0.006379842758178711, -0.00638270378112793, 0.00026535987854003906, -0.0010190804799398157, 0.008749643961588505, 0.004486878712972042, 0.0020938714345295484, -0.02221822738647461, 0.009421269098917606, 0.005587100982666016, -0.01893758773803711, 0.009273608525594113, 0.00030883153279614994, -0.017321983973185184, 0.005923906962076786, -0.009956121444702148, -0.010936816533406613, 0.013598521550496456, -0.012684186299641853, -0.0022962093353271484, -0.021881103515625, 0.23056228955586755, -0.011358420054117913, 0.011668125788370731, -0.0220585664113363, 0.009610573450724247, 0.0022734800974528735, -0.0023822784423828125, 0.21657776832580566, 0.0057068665822347375, -0.009531418482462528, -0.002690871556599972, 0.0052756468454997485, 0.0014312267303466797, 0.0041216214497884485, -0.005509614944458008, 0.20858049392700195, 0.005481402079264397, -0.009798526763916016, 0.010159969329833984, 0.003341833750406975, -0.007170279820760017, -0.011926015218098995, -0.010537226994832394, -0.009489456812540653, -0.007132291793823242, 0.027020374933878655, -0.014472246170043945, -0.006873766581217411, -0.019937753677368164, -0.09763010342915845, 0.0011192957560222094, -0.00043876965840661253, -0.001997232437133789, 0.0008194446563720703, 0.028395096460978153, -0.013383626937866211, 0.013196547826131222]
# threemm = [0.0024001598358154297, 0.00023595492045069832, -0.0028762022654214014, 0.02795553207397461, -0.003832419713338142, 0.011686484018961663, -0.01265581448872899, -0.006000836690267075, 0.008123159408569336, 0.026561419169108147, 0.05767146746317542, -0.0030677318572998047, 0.024991512298583984, 0.007570187250773186, -0.015351851781209236, 0.016221920649210686, -0.016072909037271987, 0.00936945279439283, 0.006023883819580078, 0.013816436131795173, 0.031185070673624526, -0.005366166432698494, 0.0013143221537270655, 0.005584875742594253, 0.0028104782104492188, -0.010088682174682617, -0.004513899485270034, -0.00732111930847168, 0.3876441319783529, 0.08859761555989587, 0.024760166803995842, 0.008637428283691406, -0.012347539265950447, 0.02294071515401197, -0.009983698527018303, -0.01054159800211596, 0.003606398900349861, -0.011720339457194084, 0.17085305849711108, 0.017507632573445564, -0.003492434819539314, 0.0015040238698322828, -0.0054856141408283765, -0.012652238210042244, -0.0034682750701904297, -0.07047239939371752, 0.007421016693115234, 0.01906387011210131, 0.004768848419189453, -0.004622062047322517, -0.032254695892333984, -0.02780636151631688, 0.009081602096557617, 0.0048979918162026514, -0.0006242593129477392, 0.004750728607177734, 0.21204630533854163, -0.02563587824503588, -0.011939922968546623, -0.02608068784077955, 0.01984572410583496, 0.012118180592854966, 0.022613684336344475, 0.00836944580078125, -0.0026396910349528735, 0.042238712310791016, -0.009896039962768555, 0.012024243672688728, -0.011799017588297378, -0.014516989390055413, -0.0004925727844238281, -0.4671604633331299, -0.013828674952189202, 0.007353385289510239, -0.008328676223754883, 0.012844721476237053, -0.013418118158976311, 0.0007856686909992749, -0.009769121805826675, -0.014170408248901367, -0.008299668629964119, -0.019994815190633064, 0.010735352834065903, -0.005361874898274666, 0.02345641454060865, -0.018837451934814453, -0.009024063746134514, -0.010279655456542969, -0.0038824081420898438, 0.005471706390380859, 0.0025252501169841235, 0.013438224792480469, -0.019079049428304184, -0.009731372197469002, -0.00135040283203125, -0.010829051335652595, 0.3520119984944662, 0.0044591426849365234, -0.0016239484151203687, 0.00533207257588697, -0.007386287053426033, 0.0031821727752685547, -0.005713303883870369, 0.28026747703552257, 0.01197361946105957, -0.017010211944580078, 0.0022323131561279297, 0.009041627248128181, 0.009129047393798828, 0.009379784266154045, -0.010896444320678711, 0.2752197583516439, 0.018975257873535156, -0.015512307484944587, -0.024707237879435295, -0.01278066635131836, 0.00412074724833178, 0.008322636286417717, 0.004481077194213867, 0.00924770037333178, -0.019635677337646484, -0.014699856440226311, -0.0034346580505371094, 0.010751485824584961, -0.018442869186401367, -0.593182881673177, 0.0014238357543945312, -0.020147641499837166, 0.008958896001179939, -0.006443500518798828, -0.014091809590657478, 0.01022450129191066, -0.001138607660929214]
# adi =  [-0.011404037475585938, 0.016705989837646484, -0.012964169184367158, -0.01508990923563669, 0.0015593369801836232, -0.01468412081400583, 0.03743275006612112, 0.016568899154663086, -0.01811758677164743, 0.4960358142852781, 0.7278152306874592, 0.0034364064534502248, -0.010503927866618135, 0.0061876773834228516, 0.007871150970458984, 0.03735685348510742, 0.004320224126179717, 0.010419050852457534, 0.022156635920206558, 0.012567281723022461, -0.0012262662251791845, -0.0011932055155439159, -0.02652152379353856, 0.017887036005655776, 0.02921120325724269, 0.020357529322306167, 0.01876624425252249, 0.010485092798868667, 1.4964081446329751, 0.6174885431925454, 0.012454907099405776, 0.013679424921671401, 0.012807607650756836, 0.042461077372232925, 0.04010860125223781, 0.014540433883666992, 0.07446901003519679, 0.06886394818623831, 0.5972718397776284, 0.024573405583699248, 0.013877391815185547, 0.014409224192301284, 0.029430150985717773, 0.02094244956970215, 0.041493574778238784, 0.07159169514973929, -0.007882992426554658, 0.013257741928100586, 0.020967404047647964, 0.0181732177734375, 0.027391513188679717, 0.09462388356526663, 0.2826027075449624, 0.018269459406534683, 0.01894545555114746, -0.0071849822998046875, 1.064240217208862, 0.00399017333984375, 0.00965992609659816, 0.02089961369832327, 0.02917623519897461, 0.009900013605753433, 1.183101495107015, 0.001432975133259795, 0.023351033528645537, 0.010750214258829605, 0.0117413202921548, -0.005564689636230469, 0.027173678080240737, 0.005032777786254883, 0.019531647364298355, 0.13857507705688477, 0.020506461461384795, -0.03524200121561716, -0.0072934627532958984, -0.013807137807210434, 0.026902119318644058, 0.03161883354187012, 0.022973934809366714, 0.019605159759521484, 0.016200860341389678, -0.011643250783284653, 0.015824000040689956, -0.027532736460368135, -0.022950331370036103, 0.030364036560058594, 0.003223896026611328, -0.004789749781290986, 0.010147174199421904, 0.0026569366455078125, 0.010020812352498076, -0.028893868128458955, 0.009213368097940933, 0.01959681510925293, 0.029027620951334487, 0.029532432556152344, 1.4223392009735107, 0.02724560101826956, 0.00901110967000296, 0.0018830299377441406, -0.0003577073415121923, -0.01157442728678415, 0.02049334843953421, 0.9910878340403237, 0.06829301516214992, 0.015333573023478042, -0.00738104184468602, 0.009933789571126006, 0.016789754231770537, -0.015457391738891602, -0.016446828842163086, 0.9796243508656819, 0.020390987396240234, -0.00200374921162938, 0.1251684029897051, 0.003299554189045928, 0.01021059354146292, 0.014749844868977569, -0.012847344080607392, -0.007943789164225556, 0.026190360387166045, 0.027983268102009795, 0.0364077091217041, 0.01822066307067871, 0.001808325449625503, -0.17713356018066406, -0.006024360656738281, -0.04041210810343454, 0.031117518742878936, 2.0742416381835938e-05, 0.0026242733001708984, 0.030045032501220703, 0.028810739517211914]

#jetson
twomm = [0.0039958953857421875, -0.005783557891845703, -0.014176607131958008, -0.014154911041259766, -0.031667470932006836, 0.008495092391967773, -0.0476994514465332, -0.003345012664794922, -0.050749778747558594, 0.0750875473022461, 0.06598258018493652, -0.047445058822631836, -0.09140419960021973, -0.0040094852447509766, -0.04631972312927246, -0.03663015365600586, -0.017047882080078125, -0.007888317108154297, 0.003885984420776367, -0.052564382553100586, -0.006334543228149414, -0.010804176330566406, -0.012447357177734375, 0.008351325988769531, -0.010146379470825195, -0.05513334274291992, -0.046686410903930664, -0.026044845581054688, 0.23220229148864746, 0.0292813777923584, -0.048401594161987305, 0.005576610565185547, -0.003866434097290039, -0.02774953842163086, -0.04034090042114258, -0.010005474090576172, -0.054244279861450195, -0.03223109245300293, 0.007485151290893555, -0.004731178283691406, -0.0064716339111328125, -0.017542123794555664, -0.04586982727050781, -0.018341541290283203, 0.012206792831420898, -0.0004661083221435547, -0.042156219482421875, -0.015165328979492188, -0.059271812438964844, -0.0011179447174072266, -0.006822824478149414, -0.04658055305480957, 0.0011222362518310547, -0.04617476463317871, -0.012161493301391602, -0.02389693260192871, 0.23416566848754883, -0.04073834419250488, -0.013622283935546875, -0.016924619674682617, -0.04382610321044922, -0.04438447952270508, -0.02811288833618164, -0.0620729923248291, -0.019669055938720703, -0.04409027099609375, -0.0066683292388916016, -0.030945539474487305, -0.03574776649475098, -0.004417896270751953, -0.07441854476928711, 0.02716064453125, -0.049291372299194336, -0.04601931571960449, -0.05620718002319336, -0.005716085433959961, -0.014223814010620117, -0.005340576171875, -0.009830236434936523, -0.016027450561523438, -0.013850927352905273, -0.013074874877929688, -0.02463388442993164, -0.06685805320739746, -0.016794443130493164, -0.019349098205566406, -0.002792835235595703, -0.0016455650329589844, -0.018857955932617188, -0.06942892074584961, -0.008202791213989258, -0.05714702606201172, -0.0561833381652832, -0.04728293418884277, -0.03501558303833008, -0.011295080184936523, 0.2301790714263916, -0.050225257873535156, -0.06037306785583496, -0.04750967025756836, -0.019283294677734375, -0.008711576461791992, -0.04086923599243164, 0.1587543487548828, -0.0034875869750976562, -0.008823156356811523, -0.05422496795654297, -0.09127211570739746, -0.008886098861694336, -0.011444568634033203, -0.03471636772155762, 0.18333220481872559, -0.008149862289428711, -0.010135412216186523, -0.04328751564025879, 0.018556833267211914, -0.011367559432983398, -0.0007016658782958984, -0.004175901412963867, -0.02380990982055664, -0.011449098587036133, -0.05699491500854492, -0.014740943908691406, -0.020038843154907227, -0.05520820617675781, -0.0645596981048584, -0.05568742752075195, -0.012075185775756836, -0.03178524971008301, -0.017747163772583008, -0.009852170944213867, -0.0027894973754882812, -0.047290802001953125]
#threemm = [-0.004808187484741211, -0.05393028259277344, 0.004183530807495117, 0.0007200241088867188, 0.0026977062225341797, -0.037322998046875, 0.005178689956665039, 0.004843711853027344, -0.013282060623168945, 0.044487953186035156, 0.06959152221679688, -0.01407933235168457, -0.0051860809326171875, -0.0034694671630859375, -0.004114389419555664, -0.04442262649536133, -0.004861593246459961, 0.0023941993713378906, -0.007089138031005859, -0.00015735626220703125, 0.004934549331665039, -0.0008575916290283203, 0.011492490768432617, -0.03970623016357422, 0.006748199462890625, 0.012465476989746094, 0.010394096374511719, -0.004691123962402344, 0.27080273628234863, -0.039995670318603516, 0.0013401508331298828, 0.011971712112426758, -0.007091999053955078, 0.004347085952758789, -0.07379341125488281, 0.002814769744873047, -0.0006203651428222656, -0.007925987243652344, 0.0818178653717041, 0.0009562969207763672, -0.037142038345336914, -0.0037021636962890625, 0.0004601478576660156, 0.009948968887329102, 0.0026988983154296875, -0.0029697418212890625, -0.0029306411743164062, 0.00684046745300293, -0.011697769165039062, -0.010041236877441406, 0.0005898475646972656, 0.00020694732666015625, 0.022794723510742188, 0.00563502311706543, -0.024222373962402344, -0.007619380950927734, 0.031125307083129883, -0.04928398132324219, 0.0018668174743652344, -0.0026988983154296875, 0.013557195663452148, 0.002147674560546875, 0.02111053466796875, -0.007955789566040039, 0.0029993057250976562, 0.002457141876220703, -0.027437210083007812, -0.009746313095092773, 0.007691860198974609, -0.048480987548828125, -0.009342432022094727, -0.46459317207336426, 0.004027605056762695, -0.005633115768432617, -0.003594636917114258, 0.0021882057189941406, -0.0017685890197753906, 0.0034046173095703125, -0.04538726806640625, -0.011356830596923828, -0.04667043685913086, -0.013799428939819336, -0.021283626556396484, -0.013921737670898438, 0.0033731460571289062, -0.011295557022094727, 0.006844520568847656, -0.003698110580444336, -0.010778188705444336, 0.003270864486694336, -0.010745048522949219, -0.008055925369262695, -0.017485857009887695, -0.05983471870422363, -0.0019505023956298828, 0.006420135498046875, 0.31455230712890625, 0.006539344787597656, 0.006415843963623047, -0.013681888580322266, 0.009569168090820312, 0.0009548664093017578, -0.004218339920043945, 0.18893170356750488, 0.002354145050048828, 0.014451265335083008, -0.004728555679321289, -0.04805445671081543, -0.0053980350494384766, 0.004629850387573242, 0.009042978286743164, 0.18677544593811035, -0.0015192031860351562, 0.00010323524475097656, -0.0014462471008300781, 0.0065724849700927734, -0.0644373893737793, 0.0013625621795654297, -0.009783267974853516, -0.004110813140869141, -0.05515885353088379, 0.0015404224395751953, 0.010049581527709961, -0.0040476322174072266, -0.0026187896728515625, -0.6224901676177979, -0.0033919811248779297, 0.0031981468200683594, -0.009092330932617188, -0.0003266334533691406, 0.0002276897430419922, -0.006571531295776367, 0.007757663726806641]
#adi = [-0.0037131309509277344, -0.01323556900024414, -0.007739067077636719, -0.009521007537841797, -0.03793954849243164, -0.007424116134643555, -0.004544496536254883, -0.016710519790649414, -0.013020515441894531, 0.23656320571899414, 0.25841236114501953, -0.025377273559570312, -0.012330055236816406, -0.05713653564453125, -0.0017287731170654297, -0.005518436431884766, -0.004361152648925781, -0.017136335372924805, -0.018332242965698242, 0.01007390022277832, -0.013053178787231445, 0.010228872299194336, -0.014152050018310547, -0.0484466552734375, 0.008226156234741211, 0.01454305648803711, -0.009771347045898438, -0.022562503814697266, 0.7007877826690674, 0.27581143379211426, -0.014734983444213867, -0.06654524803161621, -0.03010725975036621, -0.006327390670776367, -0.022524595260620117, -0.011513471603393555, -0.033815860748291016, -0.024942636489868164, 0.15266919136047363, -0.013386249542236328, -0.019197702407836914, -0.01578807830810547, -0.021023988723754883, -0.013375520706176758, -0.06663751602172852, -0.03835248947143555, -0.0007250308990478516, -0.01903510093688965, -0.028263092041015625, -0.09094500541687012, -0.016751527786254883, 0.0006251335144042969, 0.017384052276611328, -0.011278152465820312, -0.03236508369445801, -0.05293393135070801, 0.43509697914123535, 0.00449824333190918, -0.011101007461547852, -0.007860660552978516, -0.0335240364074707, -0.017481088638305664, 0.440889835357666, -0.024293184280395508, -0.07314896583557129, -0.014579057693481445, -0.04076218605041504, -0.003423929214477539, -0.02169632911682129, -0.11130809783935547, -0.022881507873535156, -0.03539562225341797, -0.004103660583496094, -0.012063741683959961, 0.0011272430419921875, -0.006816387176513672, -0.004561424255371094, -0.0072460174560546875, -0.0035064220428466797, -0.01673436164855957, -0.005726814270019531, -0.00972890853881836, -0.008053779602050781, -0.00403904914855957, -0.012819290161132812, -0.013484477996826172, -0.009658336639404297, -0.003127574920654297, 0.008118867874145508, -0.009952306747436523, -0.02736377716064453, -0.022210359573364258, -0.009957551956176758, -0.010674715042114258, 0.0003960132598876953, -0.07093572616577148, 0.6763992309570312, -0.01672673225402832, -0.015377044677734375, -0.009305477142333984, -0.014685392379760742, -0.01519155502319336, -0.03451418876647949, 0.4194309711456299, -0.04555797576904297, 0.006297111511230469, -0.05874204635620117, -0.00919961929321289, -0.01763176918029785, -0.05372881889343262, 0.00278472900390625, 0.42049336433410645, -0.0050563812255859375, 0.00043272972106933594, 0.032663822174072266, -0.012552499771118164, -0.015263080596923828, -0.014785051345825195, -0.011820793151855469, -0.0008091926574707031, -0.012053728103637695, -0.020572662353515625, -0.00870513916015625, -0.018454313278198242, -0.014789819717407227, -0.17766427993774414, -0.010625600814819336, -0.03761625289916992, -0.07065033912658691, -0.00125885009765625, -0.02035379409790039, -0.057671308517456055, -0.0026633739471435547]
#atax = [-0.01793527603149414, 0.0073473453521728516, -0.025603532791137695, 0.00041794776916503906, -0.005905866622924805, -0.02147841453552246, -0.08013534545898438, -0.017438173294067383, -0.02476215362548828, 0.14926910400390625, 0.15282392501831055, -0.0380854606628418, -0.058036088943481445, -0.046297311782836914, -0.039029836654663086, 0.008173942565917969, -0.018207073211669922, -0.016752004623413086, -0.024982213973999023, -0.027626514434814453, -0.058580875396728516, -0.011584758758544922, -0.05115389823913574, -0.014759540557861328, -0.036391258239746094, 0.008695840835571289, -0.02914881706237793, -0.020021677017211914, 0.3835616111755371, 0.2029743194580078, -0.02274632453918457, -0.0071065425872802734, -0.04648900032043457, -0.011424064636230469, -0.011044025421142578, -0.05695605278015137, -0.016915321350097656, -0.029232263565063477, 0.06459426879882812, -0.0352480411529541, -0.04216361045837402, -0.01858353614807129, 0.0021431446075439453, -0.020190715789794922, -0.02441263198852539, -0.009559869766235352, -0.016214847564697266, -0.025940418243408203, -0.0028781890869140625, -0.020716190338134766, 0.0007190704345703125, 0.011947154998779297, 0.005739927291870117, -0.0025374889373779297, -0.04283404350280762, 0.0033054351806640625, 0.3802511692047119, -0.015057086944580078, -0.010472297668457031, -0.037714242935180664, -0.03851747512817383, -0.015134811401367188, 0.004319667816162109, -0.07203960418701172, -0.011111974716186523, -0.012225627899169922, -0.002416372299194336, -0.018069744110107422, -0.05811285972595215, -0.03359842300415039, -0.030060529708862305, 0.03214240074157715, -0.02530837059020996, -0.05190396308898926, 0.005674123764038086, -0.012804746627807617, -0.030085325241088867, -0.06573033332824707, -0.039222002029418945, -0.03578805923461914, -0.002960205078125, -0.03410840034484863, -0.03024435043334961, -0.024115800857543945, -0.008576631546020508, -0.009808063507080078, -0.024827957153320312, -0.010193824768066406, -0.040521860122680664, -0.03899717330932617, 0.0004870891571044922, -0.029552459716796875, -0.020908594131469727, 0.008135080337524414, -0.06176424026489258, 0.00974416732788086, 0.4043235778808594, -0.02066826820373535, -0.07167863845825195, -0.02083444595336914, -0.03008556365966797, -0.03650712966918945, -0.04187321662902832, 0.2758214473724365, -0.04168581962585449, -0.07401371002197266, -0.012263059616088867, -0.013384342193603516, -0.039424896240234375, 0.0022003650665283203, 0.004575967788696289, 0.18724799156188965, -0.03111100196838379, -0.02536797523498535, -0.015599727630615234, -0.009359598159790039, -0.020038843154907227, -0.024627685546875, -0.034885406494140625, -0.012396812438964844, 0.012464284896850586, 0.01093745231628418, -0.010876893997192383, -0.03353691101074219, -0.043004512786865234, -0.1032249927520752, -0.00034689903259277344, -0.015542745590209961, -0.058316946029663086, -0.008833885192871094, 0.0054547786712646484, -0.03170609474182129, -0.013177633285522461]
#bicg = [0.008526802062988281, 0.04468560218811035, -0.07182073593139648, 0.007424592971801758, 0.021906137466430664, -0.018650054931640625, -0.0060656070709228516, 0.01899552345275879, 0.0012483596801757812, 0.22046518325805664, 0.13306903839111328, 0.02874588966369629, -0.0024983882904052734, -0.00796961784362793, 0.022321224212646484, -0.0592808723449707, 0.0032770633697509766, -0.006350278854370117, 0.016529083251953125, -0.03255128860473633, 0.019513607025146484, 0.005002498626708984, 0.020137786865234375, -0.009743928909301758, 0.03669333457946777, 0.022680282592773438, 0.001260519027709961, 0.03162026405334473, 0.5631823539733887, 0.18465924263000488, 0.04421544075012207, 0.016507863998413086, 0.029071807861328125, -0.02132868766784668, 0.012726068496704102, -0.014643669128417969, -0.008459806442260742, -0.02012014389038086, 0.1577286720275879, -0.0164029598236084, 0.0018606185913085938, -0.0029032230377197266, 0.03300809860229492, -0.010839700698852539, 0.013535499572753906, -0.008902311325073242, 0.022570371627807617, 0.02476644515991211, 0.03331279754638672, 0.035808563232421875, 0.001664876937866211, -0.013888120651245117, -0.013076543807983398, -0.004500865936279297, 0.016958236694335938, 0.011551141738891602, 0.4402046203613281, 0.013555526733398438, -0.010828495025634766, -0.004554033279418945, -0.020298480987548828, -0.009347915649414062, -0.017705917358398438, 0.027538299560546875, 0.01015925407409668, -0.003359556198120117, -0.022328853607177734, -0.03893589973449707, 0.0045166015625, -0.037992000579833984, 0.03257560729980469, -0.05185818672180176, 0.011756658554077148, 0.020856618881225586, -0.019973278045654297, 0.004950761795043945, -0.013147592544555664, 0.012696266174316406, 0.026354551315307617, -0.024324893951416016, 0.03681492805480957, 0.02239680290222168, -0.0017328262329101562, 0.03475832939147949, 0.004836082458496094, 0.040592193603515625, 0.04503965377807617, 0.020153522491455078, 0.031288862228393555, -0.004934549331665039, -0.011892080307006836, 0.011970281600952148, 0.00067138671875, -0.016809940338134766, 0.02610492706298828, 0.017863988876342773, 0.48528337478637695, 0.015955209732055664, 0.015625476837158203, 0.029432296752929688, 0.0017194747924804688, 0.019849300384521484, 0.00765228271484375, 0.24823713302612305, 0.03462934494018555, 0.017517566680908203, -0.0020630359649658203, 0.041945457458496094, 0.010836124420166016, 0.020184040069580078, 0.022504329681396484, 0.2583777904510498, 0.03460836410522461, -0.011689424514770508, 0.005284786224365234, 0.030596494674682617, 0.04045605659484863, 0.027377843856811523, 0.03406810760498047, 0.01876544952392578, -0.03389120101928711, -0.012694358825683594, 0.001512765884399414, -0.007848262786865234, -0.014481067657470703, -0.13695478439331055, 0.008362293243408203, -0.00597834587097168, -0.025041818618774414, 0.03604578971862793, 0.009956598281860352, 0.021840572357177734, 0.030394315719604492]
#cholesky = [-0.006139278411865234, -0.07127737998962402, -0.007986783981323242, -0.04346036911010742, -0.048479557037353516, -0.01770329475402832, -0.01663827896118164, -0.025681734085083008, -0.0364527702331543, -0.03522658348083496, -0.020238876342773438, -0.06990551948547363, -0.025506973266601562, -0.034356117248535156, -0.020455598831176758, -0.053495168685913086, -0.01296091079711914, -0.036839962005615234, -0.012444019317626953, -0.037694454193115234, -0.034642934799194336, -0.05254220962524414, -0.01625967025756836, -0.008274316787719727, -0.03731179237365723, -0.07222104072570801, -0.061907291412353516, -0.033086538314819336, 0.04877161979675293, 0.021959543228149414, -0.03401374816894531, -0.057334184646606445, -0.05257821083068848, -0.03451418876647949, -0.007848262786865234, -0.029017925262451172, -0.024217844009399414, -0.032793521881103516, 0.007050514221191406, -0.039125919342041016, -0.02153182029724121, -0.03862333297729492, -0.03747105598449707, -0.03144550323486328, -0.029630661010742188, -0.029114723205566406, -0.03220772743225098, -0.03099679946899414, -0.04534292221069336, -0.031144380569458008, -0.0434117317199707, -0.06169390678405762, -0.018227815628051758, -0.03971576690673828, -0.035543203353881836, -0.05072450637817383, 0.11236810684204102, -0.010363101959228516, -0.04600238800048828, -0.014934301376342773, -0.01844501495361328, -0.049833059310913086, -0.008631229400634766, -0.04505014419555664, -0.041417837142944336, -0.04403400421142578, -0.04506683349609375, -0.020549535751342773, -0.027320384979248047, -0.026016950607299805, -0.026779651641845703, -0.012964725494384766, -0.06265616416931152, -0.08712959289550781, -0.03415060043334961, -0.028562545776367188, -0.04451155662536621, -0.03622150421142578, -0.03608846664428711, -0.027828454971313477, -0.035478830337524414, -0.018539905548095703, -0.042336225509643555, -0.0685873031616211, -0.035540103912353516, -0.023517370223999023, -0.03362011909484863, -0.02293705940246582, -0.04081869125366211, -0.04593944549560547, -0.05478787422180176, -0.029508352279663086, -0.04451465606689453, -0.03513836860656738, -0.02872180938720703, -0.04078078269958496, 0.02698826789855957, -0.010565757751464844, -0.015157222747802734, -0.025158166885375977, -0.025260210037231445, -0.026485919952392578, -0.017114639282226562, 0.037424564361572266, -0.0015473365783691406, -0.07302975654602051, -0.0922391414642334, -0.0351710319519043, -0.057492733001708984, -0.030506134033203125, -0.014826774597167969, 0.04179120063781738, 0.002787351608276367, -0.025040864944458008, -0.04873251914978027, -0.03672981262207031, -0.07403755187988281, -0.03085780143737793, -0.015736818313598633, -0.019534587860107422, -0.026413679122924805, -0.028795957565307617, -0.03701043128967285, -0.10117244720458984, -0.10239887237548828, -0.07547879219055176, -0.027561426162719727, -0.045870304107666016, -0.0858912467956543, -0.026019811630249023, -0.028718948364257812, -0.018702268600463867, -0.03308534622192383]
prior_pass_all['2mm'] = twomm
# prior_pass_all['3mm'] = threemm
# prior_pass_all['adi'] = adi
# prior_pass_all['atax'] = atax
# prior_pass_all['bicg'] = bicg
# prior_pass_all['cholesky'] = cholesky

num_episodes = 1000
gamma = 0.9  
actor_lr = 1e-3  
critic_lr = 1e-2  
n_hiddens = 16  
n_states = envs_n_states[0]
n_actions = envs_n_actions[0]
device = torch.device('cuda') if torch.cuda.is_available() \
                            else torch.device('cpu')
agent = PPO(n_states=n_states,  
            n_hiddens=n_hiddens,  
            n_actions=n_actions,  
            actor_lr=actor_lr,  
            critic_lr=critic_lr,  
            lmbda = 0.95,  
            epochs = 10, 
            eps = 0.2,  
            gamma=gamma,  
            device = device
            )

return_list_mean = {}
for env in envs:
    key = f'{env.pgm}'
    return_list_mean[key] = []

return_list_all = {}
for env in envs:
    key = f'{env.pgm}'
    return_list_all[key] = []

states_action_list_all = {}
for env in envs:
    key = f'{env.pgm}'
    states_action_list_all[key] = []

data = [] # final results

tree_model_list = {}
for env in envs:
    key = f'{env.pgm}'
    tree_model_list[key] = RandomForestRegressor(n_estimators=20,random_state=1)

for i in range(num_episodes):
    all_start_time = time.time()
     # update tree_based model
    if i >= 1:
        for env in envs:
            start_time = time.time()
            tree_model_list[env.pgm].fit(np.array(states_action_list_all[env.pgm]), np.array(return_list_all[env.pgm]).reshape(-1, 1))
            end_time = time.time()
            exec_time = end_time - start_time
            tree_based_time = tree_based_time + exec_time
            print("tree-based model time(s):", tree_based_time)      

    transition_dict_reply = {
        'states': [],
        'actions': [],
        'next_states': [],
        'rewards': [],
        'dones': [],
    }

    for env in envs:
        state = env.reset() 
        transition_dict = {
            'states': [],
            'actions': [],
            'next_states': [],
            'rewards': [],
            'dones': [],
        }
        done = False  
        episode_return = 0  
        pre_gain = []
        if i >= 1:
            # feature importance
            random_forest_importance = list(tree_model_list[env.pgm].feature_importances_) 
            random_forest_feature_importance= [(i, x) for i, x in enumerate(random_forest_importance)]
            random_forest_feature_importance = sorted(random_forest_feature_importance,key=lambda x:x[1],reverse=False)
            # tree_based action_space spilit
            importance_mean = np.mean(random_forest_feature_importance)
            factor = 1
            power = 0.3
            exclude_spilit = 0
            exclude_spilit += factor * (i ** power)
            print(exclude_spilit)
            exclude_spilit = 80
            exclude_pass = []
            for feature, feature_importance in random_forest_feature_importance:
                if feature_importance < importance_mean and len(exclude_pass) < exclude_spilit:
                    exclude_pass.append(feature)
                    state[feature] = 1
                    # print(state[:env.pass_len])
                if len(exclude_pass) >= exclude_spilit:
                    break         
            # plt
            importance_plot_x_values=list(range(len(random_forest_importance)))
            threshold = 1000
            random_forest_importance = [threshold if score > threshold else score for score in random_forest_importance]
            plt.bar(importance_plot_x_values,random_forest_importance,orientation='vertical')
            with open('results/importance_'+ env.pgm + '.txt', 'a') as file:
                # Convert the list to a string and write it to the file
                file.write(' '.join(map(str, random_forest_importance)) + '\n')
            plt.xlabel('Compilation Flags', fontsize=20)
            plt.ylabel('Importance', fontsize=20)
            plt.title('Compilation Flags Importances', fontsize=20)
            plt.tick_params(labelsize=20)
            plt.savefig("feature_importances"+env.pgm +'.png', bbox_inches='tight')
            plt.close()
        while not done:
            action = agent.take_action(state)  
            next_state, reward, done, _, _  = env.step(action)  
            transition_dict['states'].append(state)
            transition_dict['actions'].append(action)
            transition_dict['next_states'].append(next_state)
            transition_dict['rewards'].append(reward)
            transition_dict['dones'].append(done)
            transition_dict_reply['states'].append(state)
            transition_dict_reply['actions'].append(action)
            transition_dict_reply['next_states'].append(next_state)
            transition_dict_reply['rewards'].append(reward)
            transition_dict_reply['dones'].append(done)
            pre_gain.append(prior_pass_all[env.pgm][action])
            state = next_state
            episode_return += reward
    
        # reward alloc
        for k in range(len(transition_dict['rewards'])):
            pass_iter = transition_dict['actions'][k]
            # print(pass_iter,prior_pass[pass_iter], pre_gain[k], episode_return, prior_pass[pass_iter]/sum(pre_gain), prior_pass[pass_iter]/sum(pre_gain)*episode_return  )
            transition_dict['rewards'][k] = pre_gain[k]/sum(pre_gain)*episode_return 
        return_list_all[env.pgm].append(episode_return)
        states_action_list_all[env.pgm].append(transition_dict['states'][-1][:env.pass_len])
        print(transition_dict['states'][-1][:env.pass_len])

        print(f'iter:{i}, pgm:{env.pgm}, return:{np.mean(return_list_all[env.pgm][-10:])}')
        output = ""
        output += f"{i}: {np.mean(return_list_all[env.pgm][-10:])}\n"
        with open('results/reward_new_'+env.pgm+'.txt', 'a') as file:
            file.write(output)
        # plt reward
        return_list_mean[env.pgm].append(np.mean(return_list_all[env.pgm][-10:]))
        column_name = 'episode_reward_mean'
        # plt.plot(return_list_mean[env.pgm])
        # plt.xlabel('Episodes')
        # plt.ylabel(column_name)
        # plt.title('Reward Progress_' + env.pgm)
        # plt.grid(True)
        # plt.savefig('results/reward_plot_'+env.pgm+'.png')
        # plt.close()

    agent.learn(transition_dict_reply)
    all_end_time = time.time()
    all_training_time = all_training_time + all_end_time - all_start_time
    print(f'all_training_time (s):{all_training_time}')
    # plt all envs' reward
    # tmp = []
    # for key, value in return_list_all.items():
    #     tmp.append(np.mean(return_list_all[key][-10:]))
    # data.append(np.mean(tmp))
    # column_name = 'episode_reward_mean'
    # plt.plot(data)
    # plt.xlabel('Episodes')
    # plt.ylabel(column_name)
    # plt.title('Reward Progress_all')
    # plt.grid(True)
    # plt.savefig('results/reward_plot_all.png')
    # plt.close()

    # print(f'iter:{i}, return:{data[-1]}')
    # output = ""
    # output += f"{i}: {data[-1]}\n"
    # with open('results/reward.txt', 'a') as file:
    #     file.write(output)


