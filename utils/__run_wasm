#!/bin/bash

if test -z "$1" || test -z "$2"; then
 echo "Usage: __run <dataset number> <device> <number of runs (optional)>"
 exit
fi

# Searching for dataset info (command line and loop wrapper)
found="0"
exec 5< _ccc_info_datasets
 read <&5 ds_max ;
 while read <&5 line; 
 do 
  if [ "$line" == "=====" ]; then
   read <&5 ds ;
   read <&5 cmd ;
   read <&5 loop_wrap ;
   if [ $ds -eq $1 ] ; then
    found="1"
    break;
   fi
  fi
 done
exec 5>&-

if [ $found != "1" ] ; then
 echo "Can't find dataset info in the _ccc_info_datasets file ..."
 exit
fi

if test -n "$3"; then
 loop_wrap=$3
fi

echo "Found dataset: " $ds
echo "Command line:  " $cmd
echo "Loop wrap:     " $loop_wrap

if test -n "$3"; then
 echo $3 > _finfo_dataset
else
 echo $loop_wrap > _finfo_dataset
fi

echo ""

if [ "$2" == "x86" ]; then
  # x86
  echo "sudo perf stat -e branch-instructions -e branch-misses -e cache-references -e cache-misses -e instructions -e mem-loads -e  mem-stores  -x ';' -o /home/kaikai/Wasm-RL/WasmRL-PPO/wasm-rl-ppo/benchmark/result.csv /home/kaikai/Wasm-RL/iwasm_interpreter --dir=. out.wasm $cmd " > tmp_bat
elif [ "$2" == "jetsonnano" ]; then
  # Jetson Nano
  echo "sudo perf stat -e armv8_pmuv3/br_pred/ -e armv8_pmuv3/br_mis_pred/ -e armv8_pmuv3/l1d_cache/ -e armv8_pmuv3/l1d_cache_refill/ -e armv8_pmuv3/l1i_cache/ -e armv8_pmuv3/l1i_cache_refill/ -e armv8_pmuv3/mem_access/ -e armv8_pmuv3/memory_error/ -e armv8_pmuv3/inst_retired/ -e armv8_pmuv3/inst_spec/ -x ';' -o /home/mini-edge/WasmRL-PPO/wasm-rl-ppo/benchmark/result.csv /home/mini-edge/arm-wasm/iwasm_interpreter --dir=. out.wasm $cmd " > tmp_bat
else
  echo "Invalid device specified. Exiting..."
  exit 1
fi

source tmp_bat
